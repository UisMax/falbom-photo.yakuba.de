* {     /* Обнуляющие стили */
    box-sizing: border-box;   /* браузер изменит расчёт padding с border и включет width и height */
    margin: 0;  /* Сброс внешних отступов вокруг элемента*/
    padding: 0; /* Сброс внутренних отступов оттолкнуть контент от границ */
    border: 0; /* Обнулим границы Сброс всех стилей рамки элемента */
    outline: 0; /* Сброс обводока вокруг элемента без размеров*/
    text-decoration: none;  /* Убираем все подчеркивания */
    list-style: none; /* Убираем стандартный маркер маркированному списку */
    line-height: 1.5;  /* Убираем интервал между строчками текста.Унифицированный интерлиньяж */
    /* text-transform: capitalize; Каждое слово с заглавной буквы */
    /* text-transform: none;  *//* каждая первая буква большая */ 
    font-family: 'Nunito', sans-serif; /* Выбираем шрифт */
    /* font-family: 'Poppins', sans-serif; */ 
    /* font-family: 'Itim', sans-serif; */
    transition: all .3s;
}
/* Псевдоэлементы Нормализация блочной модели*/
*::before,   
*::after {
    box-sizing: border-box;   /* браузер изменит расчёт padding с border и включет width и height */
    margin: 0;
    padding: 0;
}
/* Для всего корневого элемента */
html {
    font-size: 62.5%;    /* Для использывания едениц рем */
    overflow-x: hidden;  /* Содержимое, выходящее за пределы родительского» блока по оси Х, обрезается по его границам без прокрутки  */
    scroll-behavior: smooth;   /* Прокрутка плавная */ 
    scroll-padding-top: 7rem;  /* отступ сверху 5рем на расчет прокрутки */

}

body {
    min-height: 100vh;      /* Минимальная высота области просмотра */
    scroll-behavior: smooth;   /* Делаем прокрутку на странице плавной */ 
}
/* Упрощаем работу с изображениями  */
img,
video,
picture,
canvas,
svg {
    max-width: 100%;   /* Максимальная ширина 100% все помещается */
    display: block;    /* Делаем элемент блочным */ 
}
/* Наследуем свойства шрифта для полей ввода */
input,
button,
textarea,
select {
    font: inherit;   /* Внутри шрифт наследование от родителя */
}
/* Убираем внешние отступы вертикали нужным тегам, у которых есть атрибут class */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;     /* Правила переноса не учитываются */
}



/* Friendly Frontend — Александр Ламков */
/* Нормализация блочной модели */
 /* *,
 ::before,
 ::after {
   box-sizing: border-box;
 } */
 
 /* Убираем внутренние отступы слева тегам списков,у которых есть атрибут class */
 /* :where(ul, ol):where([class]) {
   padding-left: 0;
 } */
 
 /*  Убираем внешние отступы body и двум другим тегам,у которых есть атрибут class */
 /* body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 } */
 
 /* Убираем внешние отступы вертикали нужным тегам,у которых есть атрибут class */
 /* :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 } */
 
 /* Убираем стандартный маркер маркированному списку, у которого есть атрибут class */
 /* :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 } */
 
 /* Обнуляем вертикальные внешние отступы параграфа, объявляем локальную переменную для внешнего отступа вниз, чтобы избежать взаимодействие с более сложным селектором  */
 /* p {
   --paragraphMarginBottom: 24px;
 
   margin-block: 0;
 } */
 
 /*  Внешний отступ вниз для параграфа без атрибута class, который расположен не последним среди своих соседних элементов */
 /* p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 } */
 
 
 /*  Упрощаем работу с изображениями  */
 /* img {
   display: block;
   max-width: 100%;
 } */
 
 /*  Наследуем свойства шрифт для полей ввода  */
 /* input,
 textarea,
 select,
 button {
   font: inherit;
 } */
 
 
/*  Пригодится в большинстве ситуаций (когда, например, нужно будет "прижать" футер к низу сайта) */
/* html {    
   height: 100%;
 } */
 
 /* Плавный скролл  */
 /* html,
 :has(:target) {
   scroll-behavior: smooth;
 } */
 
 /* body { */
   /**
     Пригодится в большинстве ситуаций (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   /* min-height: 100%; */
   /* Унифицированный интерлиньяж */
   /* line-height: 1.5;
 } */
 
 /*  Приводим к единому цвету svg-элементы  */
 /* svg *[fill] { fill: currentColor }
 svg *[stroke] { stroke: currentColor }
  */
 /*  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 /* svg * {
   transition-property: fill, stroke;
 } */
 
 /* Удаляем все анимации и переходы для людей, которые предпочитают их не использовать */
 /* @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 } */